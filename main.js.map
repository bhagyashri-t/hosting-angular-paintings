{"version":3,"sources":["./src/app/manage/manage.component.ts","./src/app/manage/manage.component.html","./src/environments/environment.ts","./src/app/services/painting.service.ts","./src/app/paintings/paintings.component.ts","./src/app/paintings/paintings.component.html","./src/app/services/auth-guard.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/paintings-resolver.service.ts","./src/app/painting-dialog/painting-dialog.component.ts","./src/app/painting-dialog/painting-dialog.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PaintingService } from '../services/painting.service';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.scss']\n})\nexport class ManageComponent implements OnInit {\n  managePaintingsForm = new FormGroup({});\n  uriPattern:any = \"https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)\";\n  paintingData: any = {};\n  isRedirectedFromPaintings = false;\n\n  constructor( private fb: FormBuilder,\n                private router: Router, \n                private paintingService: PaintingService) { \n                  this.paintingData = this.getRouterData();\n                  console.log(\"Data from paintings : \", this.paintingData);\n                  this.formValidator();\n                  if(this.paintingData) {\n                    console.log(\"inside if condition\")\n                    this.setFormData(this.paintingData);\n                    this.isRedirectedFromPaintings = true;\n                  }\n                   \n  }\n\n  ngOnInit(): void {\n    // this.resetForm();\n  }\n\n  getRouterData() {\n    return this.router.getCurrentNavigation()?.extras.state;\n  }\n\n  formValidator() {\n      this.managePaintingsForm = this.fb.group({\n      'name':['',Validators.compose([Validators.required, Validators.maxLength(30),Validators.minLength(3)])],\n      'artist':['',Validators.compose([Validators.required])],\n      'description':['',Validators.compose([Validators.required])],\n      'url':['',Validators.compose([Validators.required])],\n      'type':['',Validators.compose([Validators.required])],\n      'cost':['',Validators.compose([Validators.required,Validators.pattern(\"^[0-9]+$\")])]\n    })\n  }\n\n  onSubmit() {\n    let data = this.managePaintingsForm.value;\n    //If redirected from paintings to manage, save should update the edited painting details\n    if(this.isRedirectedFromPaintings) {\n      data['id'] = this.paintingData.id;\n      this.paintingService.updatePainting(data);\n      this.router.navigate(['/paintings']);\n    } else {\n      //Otherwise add new painting to data    \n      data[\"id\"] = this.paintingService.paintingsData.length+1;\n      console.log(\"onSubmit : \", this.managePaintingsForm.value);\n      this.paintingService.addNewPainting(data);\n      console.log(\"paintingsData after submit : \", this.paintingService.paintingsData);\n      alert(\"New paintings saved\");\n    }\n    \n    //Redirect to paintings\n  }\n\n  onCancel() {\n    // If redirected from painting to manage, cancel should redirect back to Paintings \n    if(this.isRedirectedFromPaintings) {\n      this.router.navigate(['/paintings']);\n    } else {\n      // reset the form\n      // this.resetForm();\n      this.managePaintingsForm.reset()\n    }\n  }\n\n  setFormData(data: any) {\n    this.managePaintingsForm.setValue({\n      name: data.name,\n      artist: data.artist,\n      description: data.description,\n      type: data.type,\n      cost: data.cost,\n      url: data.url\n    });\n  }\n}\n","<div class=\"managePaintingsContainer\">\n    <form id=\"managePaintingsForm\" [formGroup]=\"managePaintingsForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field>\n            <mat-label> Painting name: </mat-label>\n            <input matInput formControlName=\"name\" type=\"text\">\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label> Creator: </mat-label>\n            <input matInput formControlName=\"artist\" type=\"text\"> \n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label>Description</mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label>Paintings url</mat-label>\n            <input matInput formControlName=\"url\" type=\"text\">\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label> Painting type: </mat-label>\n            <input matInput formControlName=\"type\" type=\"text\">\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label> Price: </mat-label>\n            <input matInput formControlName=\"cost\" type=\"text\">\n        </mat-form-field>\n        <br>\n        <mat-hint *ngIf=\"!managePaintingsForm.valid && managePaintingsForm.touched\"> Please fill up all the fields. </mat-hint><br>\n        <div class=\"manageFormBtns\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!managePaintingsForm.valid\">Save</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onCancel()\">Cancel</button>\n        </div>\n        \n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaintingService {\n  paintingsData : any = JSON.parse(sessionStorage.getItem('paintings') || \"\");\n  dataToUpdate : any = {};\n\n  constructor(private http: HttpClient) { }\n\n  addNewPainting(painting: any) {\n    this.paintingsData.push(painting);\n  }\n\n  getPaintings() {\n    return this.paintingsData;\n  }\n\n  getPaintingsData() {\n    return this.http.get('../../assets/paintings.json');\n  }\n\n  updatePainting(data: any) {\n    this.dataToUpdate = data;\n    let index = this.paintingsData.findIndex(this.checkId, this);\n    //console.log(\"Index found : \", index);\n    this.paintingsData.splice(index, 1, data);\n    sessionStorage.setItem('paintings', JSON.stringify(this.paintingsData));\n    this.dataToUpdate = {};\n  }\n\n  checkId(painting: any) {\n    return this.dataToUpdate.id === painting.id\n  }\n\n  deletePainting(data: any) {\n    this.dataToUpdate = data;\n    let index = this.paintingsData.findIndex(this.checkId, this); \n    this.paintingsData.splice(index, 1);\n    sessionStorage.setItem('paintings', JSON.stringify(this.paintingsData));\n    this.dataToUpdate = {}\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PaintingService } from '../services/painting.service';\nimport { MatDialog,MAT_DIALOG_DATA }  from '@angular/material/dialog';\nimport { PaintingDialogComponent } from '../painting-dialog/painting-dialog.component';\n\n@Component({\n  selector: 'app-paintings',\n  templateUrl: './paintings.component.html',\n  styleUrls: ['./paintings.component.scss']\n})\n\nexport class PaintingsComponent implements OnInit, OnDestroy {\n  paintings: any = [];\n  subscription: any ;\n  constructor(public dialog:MatDialog, private paintingService :PaintingService) { \n    this.getPaintingsData();\n  }\n\n  ngOnInit(): void {\n    //this.setPaintingData();\n    //this.getPaintingsData();\n    // this.paintings = this.paintingService.paintingsData;\n  }\n\n  ngOnDestroy() {\n   // this.subscription.unsubsrcibe();\n  }\n\n  getPaintingsData() {\n    // this.paintingService.getPaintingsData().subscribe(\n    //   (resp:any)=>{\n    //     console.log(resp);\n    //     this.paintings = resp;\n    //     this.paintingService.paintingsData = resp;\n    //     console.log(this.paintingService.paintingsData);\n    //   },\n    //   (err:any)=>{\n    //     console.log(err);\n    // }); \n    // console.log(\"getPaintingsData : \", this.paintings);\n\n    this.paintings = this.paintingService.paintingsData;\n  }\n\n  openDialog(painting:any) {\n    const dialogRef = this.dialog.open(PaintingDialogComponent, {data:painting});\n\n    this.subscription = dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n  addNewPainting(painting: any) {\n    this.paintingService.addNewPainting(painting);\n  }\n\n  // setPaintingData() {\n  //   // console.log(this.paintingService.setData());\n\n  //   // this.paintingService.paintingsData.push(this.paintings) ;\n  // }\n}\n","\n<!-- <mat-grid-list cols=\"2\" rowHeight=\"2:1\" > -->\n<div class=\"container\">\n    <mat-card  (click)=\"openDialog(painting)\" class=\"painting-card\" *ngFor=\"let painting of paintings\">\n        <mat-card-header>\n            <mat-card-title> {{ painting.name }} </mat-card-title>\n            <mat-card-subtitle> {{painting.artist}} </mat-card-subtitle>\n        </mat-card-header>\n        <img class=\"images\" mat-card-image src={{painting.url}} alt={{painting.name}}>\n    </mat-card>\n</div>\n<!-- </mat-grid-list> -->\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n// import { isAbsolute } from 'path';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(public authService: AuthService, public router: Router) { }\n\n  async canActivate() {\n    if(!await this.authService.checkAuthenticated()) {\n      await this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  isAuthenticated: Boolean = false;\n\n  constructor(public authService: AuthService) {\n    this.authService.isAuthenticated.subscribe((isAuthenticated:Boolean) => {\n      this.isAuthenticated = isAuthenticated;\n      sessionStorage.setItem('isAuthenticated', isAuthenticated.toString());\n    });\n   }\n\n   async ngOnInit() {\n     this.isAuthenticated = await this.authService.checkAuthenticated();\n   }\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaintingsResolverService {\n\n  constructor(private http: HttpClient) { }\n  resolve(route: ActivatedRouteSnapshot, rsState: RouterStateSnapshot): Observable<any> {\n    return this.http.get('../../assets/paintings.json');\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { PaintingService } from '../services/painting.service';\n\n@Component({\n  selector: 'app-painting-dialog',\n  templateUrl: './painting-dialog.component.html',\n  styleUrls: ['./painting-dialog.component.scss']\n})\nexport class PaintingDialogComponent implements OnInit {\n\n  constructor(private paintingService:PaintingDialogComponent,\n            @Inject(MAT_DIALOG_DATA) public data:any, \n            private router: Router, \n            public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    //console.log(this.data);\n  }\n\n  modifyPaintings(data: any) {\n    // console.log(\"Paintings to modify \", data);\n    this.router.navigate(['/manage'], { state: data});\n    this.dialog.closeAll();\n  }\n\n  deletePainting(data: any) {\n    //console.log(\"Painting deleted: \", data);\n    this.paintingService.deletePainting(data);\n    this.dialog.closeAll();\n    this.router.navigateByUrl('/paintings');\n  }\n}\n","<!-- <h1 mat-dialog-title></h1> -->\n<div mat-dialog-content>\n    <mat-card-header>\n        <mat-card-title>{{data.name}}</mat-card-title>\n        <mat-card-subtitle>{{data.artist}}</mat-card-subtitle>\n        \n    </mat-card-header>\n    <img class=\"images\" mat-card-image src={{data.url}} alt={{data.name}}>\n    <span><b> {{ data.cost | currency:'USD' }} </b></span><br>\n    <p> {{data.description}} </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click) = \"modifyPaintings(data)\" >Modify</button>\n  <button mat-button (click) = \"deletePainting(data)\">Delete</button>\n  <button mat-button [mat-dialog-close]=\"true\"> Close </button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { PaintingsComponent } from './paintings/paintings.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { PaintingDialogComponent } from './painting-dialog/painting-dialog.component';\n// import { MatOptionModule } from '@angular/material/option';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaintingsComponent,\n    ManageComponent,\n    LoginComponent,\n    HeaderComponent,\n    PaintingDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatCardModule,\n    MatSelectModule,\n    MatDialogModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, DoCheck, OnChanges, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnChanges, DoCheck {\n  title = 'angular-paintings';\n  isAuthenticated: any ;\n  \n  constructor(private authService: AuthService) {\n    \n   }\n  \n  ngOnChanges() {\n    // this.isAuthenticated = JSON.parse(sessionStorage.getItem('isAuthenticated'));\n    // console.log(\"isAuthenticated in header in OnChanges : \", this.isAuthenticated);\n    // console.log(\"isAuthenticated typeOf in header : \", typeof this.isAuthenticated);\n  }\n\n  ngDoCheck() {\n    this.isAuthenticated = JSON.parse(sessionStorage.getItem('isAuthenticated') || \"\");\n  }\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.authService.logout('/').then((response) => {\n      console.log(\"Logged out successfully.\");\n      sessionStorage.clear();\n    });\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"expanded-toolbar\">\n    <span>\n      <button mat-button routerLink=\"/\"><mat-icon>home</mat-icon></button>\n    </span>\n  <div fxLayout=\"row\" fxShow=\"false\" fxShow.gt-sm>\n    <button mat-button routerLink=\"/paintings\" *ngIf=\"isAuthenticated\">\n      <mat-icon>dashboard</mat-icon>\n      Paintings\n    </button>\n    <button mat-button routerLink=\"/manage\" *ngIf=\"isAuthenticated\">\n      <mat-icon>edit</mat-icon>\n      Manage\n    </button>\n    <button mat-button routerLink=\"/login\" *ngIf=\"!isAuthenticated\">\n      <mat-icon>power_settings_new</mat-icon>\n      Login\n    </button>\n    <button mat-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">\n      <mat-icon>exit_to_app</mat-icon>\n      Logout\n    </button>\n  </div>\n  <button mat-button [mat-menu-trigger-for]=\"menu\" fxHide=\"false\" fxHide.gt-sm>\n    <mat-icon>menu</mat-icon>\n  </button>\n  </mat-toolbar>\n  <mat-menu x-position=\"before\" #menu=\"matMenu\">\n  <button mat-menu-item routerLink=\"/paintings\" *ngIf=\"isAuthenticated\">\n    <mat-icon>dashboard</mat-icon>\n    Paintings\n  </button>\n  <button mat-menu-item routerLink=\"/manage\" *ngIf=\"isAuthenticated\">\n    <mat-icon>edit</mat-icon>\n    Manage\n  </button>\n  <button mat-menu-item routerLink=\"/login\" *ngIf=\"!isAuthenticated\">\n    <mat-icon>power_settings_new</mat-icon>\n    Login\n  </button>\n  <button mat-menu-item *ngIf=\"isAuthenticated\" (click)=\"logout()\">\n    <mat-icon>exit_to_app</mat-icon>\n    Logout\n  </button>\n  </mat-menu>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { OktaAuth} from '@okta/okta-auth-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authClient = new OktaAuth({\n    issuer: 'https://dev-5815853.okta.com/oauth2/default',\n    clientId : '0oa2a9pwp5bHwbDAh5d6'\n  });\n  public isAuthenticated = new BehaviorSubject<boolean>(false);\n\n  constructor(private router:Router) { }\n\n  async checkAuthenticated() {\n    const authenticated = await this.authClient.session.exists();\n    this.isAuthenticated.next(authenticated);\n    return authenticated;\n  }\n\n  async login(username: string, password: string) {\n    const transaction = await this.authClient.signIn({username, password});\n\n    if(transaction.status !== 'SUCCESS') {\n      throw Error(`We can not handle the ${transaction.status} status`);\n    }\n    this.isAuthenticated.next(true);\n    this.authClient.session.setCookieAndRedirect(transaction.sessionToken);\n  }\n\n  async logout(redirect: string) {\n    try {\n      await this.authClient.signOut();\n      this.isAuthenticated.next(false);\n      this.router.navigate([redirect]);\n    } catch(error) {\n      console.log(\"Error while logout : \", error);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ManageComponent } from './manage/manage.component';\nimport { PaintingsComponent } from './paintings/paintings.component';\nimport { PaintingsResolverService } from './services/paintings-resolver.service';\nimport { AuthGuardService } from './services/auth-guard.service';\n\nconst routes: Routes = [{\n  path: '', \n  component: LoginComponent,\n  resolve: {\n    paintings: PaintingsResolverService\n  }\n}, {\n  path: 'manage', \n  component: ManageComponent,\n  canActivate: [ AuthGuardService ]\n}, {\n  path: 'paintings', \n  component: PaintingsComponent,\n  canActivate: [ AuthGuardService ]\n}, {\n  path: 'login',\n  component: LoginComponent,\n  resolve: {\n    paintings: PaintingsResolverService\n  }\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers : [PaintingsResolverService]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { PaintingService } from '../services/painting.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup = new FormGroup({});\n  public loginInvalid: Boolean = true;\n  private formSubmitAttempt: boolean = false;\n  private returnUrl: string = '';\n\n  constructor(private route:ActivatedRoute, \n              private paintingService: PaintingService,\n              private fb: FormBuilder,\n              private router: Router,\n              private authService: AuthService) { \n   \n  }\n\n  async ngOnInit(){\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/paintings';\n\n    this.form = this.fb.group({\n      'username': ['', Validators.email],\n      'password': ['', Validators.required]\n    });\n\n    if(await this.authService.checkAuthenticated()) {\n      this.getPaintingsData();\n      await this.router.navigate([this.returnUrl]);\n    }\n  }\n\n  async onSubmit() {\n    this.loginInvalid = false;\n    this.formSubmitAttempt = false;\n    if(this.form.valid) {\n      try {\n        const username = this.form.value.username;\n        const password = this.form.value.password;\n        await this.authService.login(username, password).then((response) => {\n          console.log(\"Login response: \", response);\n        });\n      } catch (error) {\n        this.loginInvalid = true;\n      }\n    } else {\n      this.formSubmitAttempt = true;\n    }\n  }\n\n  getPaintingsData() {\n    this.route.data.subscribe((res) => {\n      console.log(\"app component data: \" ,res);\n      this.paintingService.paintingsData = res.paintings;\n      sessionStorage.setItem('paintings',JSON.stringify(res.paintings));\n    })\n  }\n}\n","<mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" fxLayout=\"column\">\n        <h2>Log In</h2>\n        <mat-error *ngIf=\"loginInvalid\">\n          The username and password were not recognised\n        </mat-error>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"Email\" formControlName=\"username\" required>\n          <mat-error>\n            Please provide a valid email address\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\n          <mat-error>\n            Please provide a valid password\n          </mat-error>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\">Login</button>\n      </form>\n    </mat-card-content>\n  </mat-card>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}